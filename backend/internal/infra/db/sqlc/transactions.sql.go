// Code generated by sqlc. DO NOT EDIT.
// versions:
//   sqlc v1.29.0
// source: transactions.sql

package sqlc

import (
	"context"
	"time"

	"github.com/google/uuid"
)

const createTransaction = `-- name: CreateTransaction :one
INSERT INTO transactions (
  id,
  description,
  date,
  amount
) VALUES (
  $1, $2, $3, $4
) 
RETURNING id, description, date, amount
`

type CreateTransactionParams struct {
	ID          uuid.UUID `json:"id"`
	Description string    `json:"description"`
	Date        time.Time `json:"date"`
	Amount      float64   `json:"amount"`
}

func (q *Queries) CreateTransaction(ctx context.Context, arg CreateTransactionParams) (Transaction, error) {
	row := q.db.QueryRow(ctx, createTransaction,
		arg.ID,
		arg.Description,
		arg.Date,
		arg.Amount,
	)
	var i Transaction
	err := row.Scan(
		&i.ID,
		&i.Description,
		&i.Date,
		&i.Amount,
	)
	return i, err
}

const getTransaction = `-- name: GetTransaction :one
SELECT
  id,
  description,
  date,
  amount
FROM 
    transactions
WHERE 
    id = $1
`

func (q *Queries) GetTransaction(ctx context.Context, id uuid.UUID) (Transaction, error) {
	row := q.db.QueryRow(ctx, getTransaction, id)
	var i Transaction
	err := row.Scan(
		&i.ID,
		&i.Description,
		&i.Date,
		&i.Amount,
	)
	return i, err
}
